{"version":3,"sources":["logo.svg","components/Header/Header.module.scss","config/settings.js","redux/action/QuanLyPhimAction.js","redux/constant/type.js","pages/HomePage/HomePage.js","components/Header/Header.js","components/Footer/Footer.js","templates/HomeTemplate.js","App.js","serviceWorker.js","redux/reducer/QuanLyPhimReducer.js","redux/reducer/rootReducer.js","index.js"],"names":["module","exports","settings","layDanhSachPhim","dispatch","axios","url","method","then","res","type","danhSachPhim","data","HomePage","renderDanhSachPhim","props","map","phim","index","className","key","src","hinhAnh","alt","tenPhim","componentDidMount","this","Component","connect","state","QuanLyPhimReducer","Header","aria-hidden","id","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","HomeLayout","HomeTemplate","render","propsComponent","App","path","exact","Boolean","window","location","hostname","match","stateDefault","rootReducer","combineReducers","action","store","createStore","applyMiddleware","reduxThunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.746ada18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__movie-nav\":\"Header_header__movie-nav__2hpSK\",\"header__movie\":\"Header_header__movie__3amGl\",\"navbar-nav\":\"Header_navbar-nav__39xXj\",\"nav-item\":\"Header_nav-item__2Nka6\",\"nav-link\":\"Header_nav-link__3CnLb\",\"active\":\"Header_active__2t2_3\"};","export const settings = {\r\n    domain: 'http://movie0706.cybersoft.edu.vn',\r\n    groupId: 'GP12',\r\n    accessToken: 'accessToken',\r\n    userLogin: 'userLogin' \r\n}","import axios from 'axios';\r\nimport {settings} from '../../config/settings';\r\nimport {LAY_DANH_SACH_PHIM} from '../constant/type';\r\n\r\n\r\n\r\n//Action lấy danh sách phim => đưa danh sách phim về reducer\r\nexport const layDanhSachPhim = () => {\r\n    return dispatch => {\r\n        axios({\r\n            url: settings.domain + '/api/quanlyphim/laydanhsachphim?manhom=' + settings.groupId,\r\n            method: \"GET\"\r\n        }).then(res => {\r\n            dispatch({\r\n                type: LAY_DANH_SACH_PHIM,\r\n                danhSachPhim: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n","export const LAY_DANH_SACH_PHIM = \"LAY_DANH_SACH_PHIM\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {layDanhSachPhim} from '../../redux/action/QuanLyPhimAction';\r\n\r\nclass HomePage extends Component {\r\n\r\n    renderDanhSachPhim = () => {\r\n        return this.props.danhSachPhim.map((phim, index) => {\r\n            return (\r\n                <div className=\"card col-3\" key={index}>\r\n                    <img className=\"card-img-top\" src={phim.hinhAnh} alt={phim.hinhAnh} />\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">{phim.tenPhim}</h4>\r\n                        <p className=\"card-text\">Text</p>\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.dispatch(layDanhSachPhim());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='row container'>\r\n                {this.renderDanhSachPhim()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        danhSachPhim: state.QuanLyPhimReducer.danhSachPhim\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(HomePage)","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Header.module.scss'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n                <header >\r\n                    <p className=\"container text-white text-right mb-0\"><i className=\"fa fa-phone\" aria-hidden=\"true\" />\r\n                        <span className=\"mx-3 pr-2 border-right\">0330 123 4567</span> <i className=\"fa fa-search\" aria-hidden=\"true\" /></p>\r\n                    <div className=\"header__movie-nav \" id=\"header_movie\">\r\n                        <nav className=\"container header__movie navbar navbar-expand-lg navbar-dark pt-0\">\r\n                            <a className=\"navbar-brand\" href=\"#\">\r\n                                <img src=\"./img/logo.svg\" alt=\"logo movie\" />\r\n                            </a>\r\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#movie\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\" />\r\n                            </button>\r\n                            <div className=\"collapse navbar-collapse\" id=\"movie\">\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n                                    <li className=\"nav-item active\">\r\n                                        <a className=\"nav-link\" href=\"#\">HOME</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" href=\"#\">WHAT'S ON</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" href=\"#\">SHORTCODES</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" href=\"#\">NEWS</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" href=\"#\">CONTACT</a>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link\" href=\"#\" data-toggle=\"modal\" data-target=\"#exampleModal\">SIGN IN</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                </header>\r\n           \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\n\r\nconst HomeLayout = ({...props}) => {\r\n    return (\r\n        <Fragment>\r\n            <Header/>\r\n            {/* {props.children} */}\r\n            <Footer/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport const HomeTemplate = ({Component,...props}) => {\r\n    return <Route {...props} render={(propsComponent) => {\r\n        return (\r\n            <HomeLayout>\r\n                <Component {...propsComponent}/>\r\n            </HomeLayout>\r\n        )\r\n    }}\r\n    />\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport {Route, BrowserRouter, Switch} from 'react-router-dom';\nimport {HomeTemplate} from './templates/HomeTemplate';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Switch>\n      <HomeTemplate path='/' exact Component={HomePage}/>\n    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {LAY_DANH_SACH_PHIM} from '../constant/type';\r\n\r\nconst stateDefault = {\r\n    danhSachPhim : []\r\n}\r\n\r\nexport const QuanLyPhimReducer = (state = stateDefault, action) => {\r\n    switch (action.type) {\r\n        case LAY_DANH_SACH_PHIM:\r\n            \r\n            state.danhSachPhim = action.danhSachPhim\r\n            return {...state};\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport {QuanLyPhimReducer} from './QuanLyPhimReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    QuanLyPhimReducer : QuanLyPhimReducer\r\n})\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport {rootReducer} from './redux/reducer/rootReducer';\n\n\n\nconst store = createStore(rootReducer, applyMiddleware(reduxThunk));\n\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}